// basic information about the workflow
manifest {
  name = '{{ cookiecutter.archetype_id }}'
  description = '{{ cookiecutter.archetype_description }}'
  version = '0.0.10'
  homePage = '{{ cookiecutter.archetype_git }}'
  author = '{{ cookiecutter.archetype_author }}'
  nextflowVersion = '>=20.07.1'
}



// Default configuration
executor {
	name = 'local'
	cpus   = 2
	memory = 5.GB
}

process {
	executor = 'local'
	cpus = 1
	memory = 2.GB
	shell = ['/bin/bash', '-euo', 'pipefail']
}

// Export this variable to prevent local Python libraries 
// from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// PROFILE CONFIGURATIONS
profiles {

  docker {
      docker.enabled         = true
      docker.userEmulation   = true
      singularity.enabled    = false
      podman.enabled         = false
      shifter.enabled        = false
      charliecloud.enabled   = false

      process.container = "ghcr.io/{{ cookiecutter.archetype_org }}/{{ cookiecutter.archetype_id }}:0.0.10"
  }

  singularity {
      singularity.enabled    = true
      singularity.autoMounts = true
      docker.enabled         = false
      podman.enabled         = false
      shifter.enabled        = false
      charliecloud.enabled   = false

      process.container = "docker://ghcr.io/{{ cookiecutter.archetype_org }}/{{ cookiecutter.archetype_id }}:0.0.10"
  }

  slurm {
      process.executor='slurm'
      process.queue='compute'
  }

  apple {
    docker.runOptions = '--platform linux/amd64'
  }   

  // GitHub actions configuration to run test pipeline

  ci {
      executor.name = 'local'
      executor.cpus   = 2
      executor.memory = 6.GB
      executor.queueSize = 5

      process.executor = 'local'
      process.cpus = 1
      process.memory = 2.GB
      process.shell = ['/bin/bash', '-euo', 'pipefail']
  }

  // workstation config, ideal for developing the pipeline
  workstation { 
	includeConfig 'workstation.config' 
  }

  // Son of Grid Engine configuration
  sge {
	includeConfig 'sge.config'
  }


  // test profile defining some data
  test {
	includeConfig 'test.config'
  }

  // test profile for the string network defining some data
  string {
	includeConfig 'string.config'
  }

  // test profile for the biogrid network defining some data
  biogrid {
	includeConfig 'biogrid.config'
  }

  // test profile for the biogrid cosmic network defining some data
  biogrid_cosmic {
	includeConfig 'biogrid_cosmic.config'
  }

  // test profile for the string cosmic network defining some data
  string_cosmic {
	includeConfig 'string_cosmic.config'
  }

}

// configuring log information
timeline {
  enabled = true
  file = "logs/execution_timeline.html"
}

report {
  enabled = true
  file = "logs/execution_report.html"
}

trace {
  enabled = true
  file = "logs/execution_trace.txt"
}